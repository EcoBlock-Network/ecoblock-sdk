// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

String greet({required String name}) =>
    RustLib.instance.api.crateApiSimpleGreet(name: name);

Future<String> frbCreateBlock({
  required List<int> data,
  required List<String> parents,
}) => RustLib.instance.api.crateApiSimpleFrbCreateBlock(
  data: data,
  parents: parents,
);

Future<BigInt> frbGetTangleSize() =>
    RustLib.instance.api.crateApiSimpleFrbGetTangleSize();

Future<void> frbAddPeerConnection({
  required String from,
  required String to,
  required double weight,
}) => RustLib.instance.api.crateApiSimpleFrbAddPeerConnection(
  from: from,
  to: to,
  weight: weight,
);

Future<List<String>> frbListPeers({required String peerId}) =>
    RustLib.instance.api.crateApiSimpleFrbListPeers(peerId: peerId);

Future<String> frbCreateBlockWithParents({
  required List<int> data,
  required List<String> parents,
}) => RustLib.instance.api.crateApiSimpleFrbCreateBlockWithParents(
  data: data,
  parents: parents,
);

Future<String> frbPropagateBlock({
  required List<int> data,
  required List<String> parents,
}) => RustLib.instance.api.crateApiSimpleFrbPropagateBlock(
  data: data,
  parents: parents,
);

Future<String> frbGenerateKeypair({required String path}) =>
    RustLib.instance.api.crateApiSimpleFrbGenerateKeypair(path: path);

Future<String> frbGetPublicKey({required String path}) =>
    RustLib.instance.api.crateApiSimpleFrbGetPublicKey(path: path);

Future<String> frbGetNodeId({required String path}) =>
    RustLib.instance.api.crateApiSimpleFrbGetNodeId(path: path);

Future<bool> frbNodeIsInitialized({required String path}) =>
    RustLib.instance.api.crateApiSimpleFrbNodeIsInitialized(path: path);

Future<String> frbCreateLocalNode({required String path}) =>
    RustLib.instance.api.crateApiSimpleFrbCreateLocalNode(path: path);

Future<void> frbResetNode({required String path}) =>
    RustLib.instance.api.crateApiSimpleFrbResetNode(path: path);

Future<void> frbInitializeTangle() =>
    RustLib.instance.api.crateApiSimpleFrbInitializeTangle();

Future<void> frbInitializeMesh({required String path}) =>
    RustLib.instance.api.crateApiSimpleFrbInitializeMesh(path: path);
