// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

String greet({required String name}) =>
    RustLib.instance.api.crateApiSimpleGreet(name: name);

Future<String> frbCreateBlock({
  required List<int> data,
  required List<String> parents,
}) => RustLib.instance.api.crateApiSimpleFrbCreateBlock(
  data: data,
  parents: parents,
);

Future<BigInt> frbGetTangleSize() =>
    RustLib.instance.api.crateApiSimpleFrbGetTangleSize();

Future<void> frbAddPeerConnection({
  required String from,
  required String to,
  required double weight,
}) => RustLib.instance.api.crateApiSimpleFrbAddPeerConnection(
  from: from,
  to: to,
  weight: weight,
);

Future<List<String>> frbListPeers({required String peerId}) =>
    RustLib.instance.api.crateApiSimpleFrbListPeers(peerId: peerId);

Future<String> frbCreateBlockWithParents({
  required List<int> data,
  required List<String> parents,
}) => RustLib.instance.api.crateApiSimpleFrbCreateBlockWithParents(
  data: data,
  parents: parents,
);

Future<String> frbPropagateBlock({
  required List<int> data,
  required List<String> parents,
}) => RustLib.instance.api.crateApiSimpleFrbPropagateBlock(
  data: data,
  parents: parents,
);

Future<String> frbGenerateKeypair() =>
    RustLib.instance.api.crateApiSimpleFrbGenerateKeypair();

Future<String> frbGetPublicKey() =>
    RustLib.instance.api.crateApiSimpleFrbGetPublicKey();

Future<String> frbGetNodeId() =>
    RustLib.instance.api.crateApiSimpleFrbGetNodeId();

Future<bool> frbNodeIsInitialized() =>
    RustLib.instance.api.crateApiSimpleFrbNodeIsInitialized();

Future<String> frbCreateLocalNode() =>
    RustLib.instance.api.crateApiSimpleFrbCreateLocalNode();

Future<void> frbResetNode() =>
    RustLib.instance.api.crateApiSimpleFrbResetNode();

Future<void> frbInitializeTangle() =>
    RustLib.instance.api.crateApiSimpleFrbInitializeTangle();

Future<void> frbInitializeMesh() =>
    RustLib.instance.api.crateApiSimpleFrbInitializeMesh();

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<BridgeError>>
abstract class BridgeError implements RustOpaqueInterface {}
